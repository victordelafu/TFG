---
const idContenedor = Astro.props.id ?? "tour-grid";
const mostrarFavoritos = Astro.props.favoritos ?? false;
---

<div
  id={idContenedor}
  class="grid md:grid-cols-2 lg:grid-cols-3 gap-6"
  data-idcontenedor={idContenedor}
  data-favoritos={mostrarFavoritos}
/>

<script type="module">
  document.addEventListener("DOMContentLoaded", () => {
    const rootDiv = document.querySelector("[data-idcontenedor]");
    if (!rootDiv) return;

    const mostrarFavoritos = rootDiv.dataset.favoritos === "true";
    const todosLosTours = JSON.parse(localStorage.getItem("tours") || "[]");

    const renderizar = (lista) => {
      if (!lista.length) {
        rootDiv.innerHTML = mostrarFavoritos
          ? `<div class="text-center text-gray-600 mt-10">
              <p class="text-xl">No tienes tours en favoritos todavía.</p>
              <a href="/Cliente/Index" class="text-accent underline hover:text-alternative mt-2 inline-block">
                Ver tours disponibles →
              </a>
            </div>`
          : `<p class="text-center text-gray-600 mt-10">No se encontraron tours con los filtros aplicados.</p>`;
        return;
      }

      rootDiv.innerHTML = lista.map(t => `
        <div class="relative tour-card" data-id="${t.id}">
          <a href="/Tours/Informacion?id=${t.id}" class="block bg-white rounded-xl shadow hover:shadow-lg transition overflow-hidden">
            <img src="${t.imagen}" alt="${t.nombre}" class="w-full h-48 object-cover" />
            <div class="p-4">
              <h2 class="text-lg font-bold">${t.nombre}</h2>
              <p class="text-gray-600 text-sm">${t.puerto} – ${t.fecha} ${t.hora}</p>
              <p class="text-primary font-semibold">€${t.precio}/persona</p>
            </div>
          </a>
          <button type="button" class="absolute bottom-2 right-2 hover:bg-opacity-100 transition text-xl" data-id="${t.id}">
            <span class="icon-fav">♡</span>
          </button>
        </div>
      `).join('');

      const favoritos = JSON.parse(localStorage.getItem("favoritos_tours") || "[]");
      document.querySelectorAll(".tour-card").forEach(card => {
        const id = card.dataset.id;
        const icon = card.querySelector(".icon-fav");

        if (favoritos.includes(id)) {
          icon.textContent = "♥";
        }

        card.querySelector("button")?.addEventListener("click", (e) => {
          e.preventDefault();
          let favs = JSON.parse(localStorage.getItem("favoritos_tours") || "[]");

          if (favs.includes(id)) {
            favs = favs.filter(f => f !== id);
            icon.textContent = "♡";
          } else {
            favs.push(id);
            icon.textContent = "♥";
          }

          localStorage.setItem("favoritos_tours", JSON.stringify(favs));
        });
      });
    };

    // Mostrar tours favoritos o todos inicialmente
    let toursAMostrar = todosLosTours;
    if (mostrarFavoritos) {
      const favoritos = JSON.parse(localStorage.getItem("favoritos_tours") || "[]");
      toursAMostrar = todosLosTours.filter(t => favoritos.includes(t.id));
    }

    renderizar(toursAMostrar);

    // Filtro: escucha el evento del componente Filter.astro
    window.addEventListener("filtros-aplicados", (e) => {
      const { Puerto, precioMax, fecha } = e.detail;
      let filtrados = todosLosTours;

      if (Puerto) filtrados = filtrados.filter(t => t.puerto.toLowerCase().includes(Puerto.toLowerCase()));
      if (precioMax) filtrados = filtrados.filter(t => parseFloat(t.precio) <= parseFloat(precioMax));
      if (fecha) filtrados = filtrados.filter(t => t.fecha === fecha);

      // Si está en favoritos, aplicar también ese filtro
      if (mostrarFavoritos) {
        const favoritos = JSON.parse(localStorage.getItem("favoritos_tours") || "[]");
        filtrados = filtrados.filter(t => favoritos.includes(t.id));
      }

      renderizar(filtrados);
    });
  });
</script>
