---
import PatronLayout from '../../layouts/PatronLayout.astro';
---

<PatronLayout>
  <section class="max-w-2xl mx-auto px-6 py-12 pt-[6.5rem]">
    <h1 class="text-4xl font-bold text-gray-800 mb-8 text-center">Publicar nuevo barco</h1>

    <form id="form-barco" class="space-y-6 bg-white p-8 rounded-2xl ">
      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Nombre del barco</label>
        <input type="text" name="nombre" required
          class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-accent focus:outline-none" />
      </div>

      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Descripción</label>
        <textarea name="descripcion" required rows="4"
          class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-accent focus:outline-none resize-none"></textarea>
      </div>

      <div class="grid grid-cols-2 gap-4">
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Precio por día (€)</label>
          <input type="number" name="precio" required
            class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-accent focus:outline-none" />
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Imagen del barco</label>
          <input type="file" name="imagen" accept="image/*" required
            class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-accent focus:outline-none bg-white" />
        </div>
      </div>

      <fieldset class="border border-gray-300 rounded-lg p-4">
        <legend class="font-semibold text-gray-700 text-base mb-2">Extras incluidos</legend>
        <div class="grid grid-cols-2 gap-2 text-sm text-gray-800">
          <label class="flex items-center gap-2">
            <input type="checkbox" name="extras" value="Chalecos salvavidas" class="accent-accent" />
            Chalecos salvavidas
          </label>
          <label class="flex items-center gap-2">
            <input type="checkbox" name="extras" value="GPS y radio marina" class="accent-accent" />
            GPS y radio marina
          </label>
          <label class="flex items-center gap-2">
            <input type="checkbox" name="extras" value="Equipo de pesca" class="accent-accent" />
            Equipo de pesca
          </label>
          <label class="flex items-center gap-2">
            <input type="checkbox" name="extras" value="Seguro incluido" class="accent-accent" />
            Seguro incluido
          </label>
          <label class="flex items-center gap-2">
            <input type="checkbox" name="extras" value="Nevera portátil" class="accent-accent" />
            Nevera portátil
          </label>
          <label class="flex items-center gap-2">
            <input type="checkbox" name="extras" value="Ducha exterior" class="accent-accent" />
            Ducha exterior
          </label>
        </div>
      </fieldset>

      <div class="text-center">
        <button type="submit"
          class="bg-accent text-white text-base px-6 py-3 rounded-lg hover:bg-alternative transition duration-200 shadow-md">
          Publicar barco
        </button>
      </div>

      <p id="mensaje" class="mt-4 text-green-600 font-semibold text-center hidden">Se ha publicado tu barco</p>
    </form>
  </section>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('form-barco');
      const mensaje = document.getElementById('mensaje');
  
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
  
        const formData = new FormData(form);
        const extrasSeleccionados = formData.getAll("extras");
        const imagenFile = formData.get("imagen");
  
        if (!imagenFile || !imagenFile.type.startsWith("image/")) {
          alert("Por favor, selecciona una imagen válida.");
          return;
        }
  
        // Convertir imagen a base64 (simulación de subida para localStorage o simple API)
        const toBase64 = file => new Promise((resolve, reject) => {
          const reader = new FileReader();
          reader.onload = () => resolve(reader.result);
          reader.onerror = error => reject(error);
          reader.readAsDataURL(file);
        });
  
        const imagenBase64 = await toBase64(imagenFile);
  
        const datos = Object.fromEntries(formData.entries());
        const barcos = JSON.parse(localStorage.getItem('barcos') || '[]');
        const usuario = localStorage.getItem("usuario");
  
        const nuevo = {
          id: Date.now().toString(),
          nombre: datos.nombre,
          descripcion: datos.descripcion,
          precio: datos.precio,
          imagen: imagenBase64, // en lugar de una URL
          extras: extrasSeleccionados,
          publicadoPor: usuario
        };
  
        barcos.push(nuevo);
        localStorage.setItem('barcos', JSON.stringify(barcos));
  
        form.reset();
        mensaje.classList.remove('hidden');
      });
    });
  </script>
  
</PatronLayout>
