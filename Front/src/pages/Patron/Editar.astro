---
import PatronLayout from '../../layouts/PatronLayout.astro';
---
<PatronLayout>
  <section class="max-w-2xl mx-auto px-6 py-12 pt-[6.5rem]">
    <h1 class="text-4xl font-bold text-gray-800 mb-8 text-center">Editar tour</h1>

    <form id="form-editar" class="space-y-6 bg-white p-8 rounded-2xl hidden">
      <input type="hidden" name="id" />

      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Nombre del tour</label>
        <input type="text" name="nombre" required class="w-full px-4 py-2 rounded-lg border border-gray-300" />
      </div>

      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Puerto de salida</label>
        <input type="text" name="puerto" required class="w-full px-4 py-2 rounded-lg border border-gray-300" />
      </div>

      <div class="grid grid-cols-2 gap-4">
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Fecha</label>
          <input type="date" name="fecha" required class="w-full px-4 py-2 rounded-lg border border-gray-300" />
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Hora</label>
          <input type="time" name="hora" required class="w-full px-4 py-2 rounded-lg border border-gray-300" />
        </div>
      </div>

      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Número de pasajeros</label>
        <input type="number" name="pasajeros" required class="w-full px-4 py-2 rounded-lg border border-gray-300" />
      </div>

      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Descripción</label>
        <textarea name="descripcion" rows="4" required class="w-full px-4 py-2 rounded-lg border border-gray-300"></textarea>
      </div>

      <div class="grid grid-cols-2 gap-4">
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Precio (€)</label>
          <input type="number" name="precio" required class="w-full px-4 py-2 rounded-lg border border-gray-300" />
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-1">Imagen actual</label>
          <img id="preview-imagen" src="" alt="Imagen actual" class="w-full h-40 object-cover rounded" />
        </div>
      </div>

      <div>
        <label class="block text-sm font-medium text-gray-700 mb-1">Cambiar imagen (opcional)</label>
        <input type="file" name="imagenNueva" accept="image/*"
          class="w-full px-4 py-2 rounded-lg border border-gray-300 bg-white" />
      </div>

      <fieldset class="border border-gray-300 rounded-lg p-4">
        <legend class="font-semibold text-gray-700 text-base mb-2">Extras incluidos</legend>
        <div class="grid grid-cols-2 gap-2 text-sm text-gray-800">
          <label><input type="checkbox" name="extras" value="Guía incluido" class="accent-accent" /> Guía incluido</label>
          <label><input type="checkbox" name="extras" value="Equipo de snorkel" class="accent-accent" /> Snorkel</label>
          <label><input type="checkbox" name="extras" value="Comida/bebida" class="accent-accent" /> Comida/bebida</label>
          <label><input type="checkbox" name="extras" value="Seguro incluido" class="accent-accent" /> Seguro incluido</label>
        </div>
      </fieldset>

      <div class="flex justify-between items-center">
        <a href="/Patron/Index" class="text-sm text-gray-600 hover:underline">← Volver</a>
        <button type="submit" class="bg-accent text-white px-6 py-3 rounded-lg hover:bg-alternative transition">Guardar cambios</button>
      </div>
    </form>

    <p id="mensaje" class="text-green-600 font-semibold mt-6 hidden text-center">Se han guardado los cambios</p>
  </section>

  <script type="module">
    document.addEventListener("DOMContentLoaded", () => {
      const id = new URLSearchParams(window.location.search).get("id");
      const tours = JSON.parse(localStorage.getItem("tours") || "[]");
      const form = document.getElementById("form-editar");
      const mensaje = document.getElementById("mensaje");

      const tour = tours.find(t => t.id === id);
      if (!tour) {
        document.querySelector("section").innerHTML = "<p class='text-red-600 text-center'>Tour no encontrado.</p>";
        return;
      }

      form.id.value = tour.id;
      form.nombre.value = tour.nombre;
      form.descripcion.value = tour.descripcion;
      form.precio.value = tour.precio;
      form.puerto.value = tour.puerto;
      form.fecha.value = tour.fecha;
      form.hora.value = tour.hora;
      form.pasajeros.value = tour.pasajeros;
      document.getElementById("preview-imagen").src = tour.imagen;

      form.querySelectorAll('input[name="extras"]').forEach(input => {
        input.checked = tour.extras?.includes(input.value) || false;
      });

      form.classList.remove("hidden");

      form.addEventListener("submit", async (e) => {
        e.preventDefault();
        const formData = new FormData(form);
        const datos = Object.fromEntries(formData.entries());
        const extras = formData.getAll("extras");

        const imagenNueva = formData.get("imagenNueva");
        if (imagenNueva && imagenNueva.size > 0) {
          const toBase64 = file =>
            new Promise((resolve, reject) => {
              const reader = new FileReader();
              reader.onload = () => resolve(reader.result);
              reader.onerror = reject;
              reader.readAsDataURL(file);
            });
          datos.imagen = await toBase64(imagenNueva);
        } else {
          datos.imagen = tour.imagen;
        }

        const index = tours.findIndex(t => t.id === datos.id);
        if (index !== -1) {
          tours[index] = { ...tours[index], ...datos, pasajeros: datos.pasajeros, extras };
          localStorage.setItem("tours", JSON.stringify(tours));
          mensaje.classList.remove("hidden");
        }
      });
    });
  </script>
</PatronLayout>
